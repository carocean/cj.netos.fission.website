<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cj.netos.fission.mapper.BusinessIncomeRatioMapper">
  <resultMap id="BaseResultMap" type="cj.netos.fission.model.BusinessIncomeRatio">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="min_amount_edge" jdbcType="BIGINT" property="minAmountEdge" />
    <result column="max_amount_edge" jdbcType="BIGINT" property="maxAmountEdge" />
    <result column="ratio" jdbcType="DECIMAL" property="ratio" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    id, min_amount_edge, max_amount_edge, ratio
  </sql>
  <select id="selectByExample" parameterType="cj.netos.fission.model.BusinessIncomeRatioExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from business_income_ratio
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from business_income_ratio
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from business_income_ratio
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cj.netos.fission.model.BusinessIncomeRatioExample">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from business_income_ratio
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cj.netos.fission.model.BusinessIncomeRatio">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into business_income_ratio (id, min_amount_edge, max_amount_edge, 
      ratio)
    values (#{id,jdbcType=VARCHAR}, #{minAmountEdge,jdbcType=BIGINT}, #{maxAmountEdge,jdbcType=BIGINT}, 
      #{ratio,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cj.netos.fission.model.BusinessIncomeRatio">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into business_income_ratio
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="minAmountEdge != null">
        min_amount_edge,
      </if>
      <if test="maxAmountEdge != null">
        max_amount_edge,
      </if>
      <if test="ratio != null">
        ratio,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="minAmountEdge != null">
        #{minAmountEdge,jdbcType=BIGINT},
      </if>
      <if test="maxAmountEdge != null">
        #{maxAmountEdge,jdbcType=BIGINT},
      </if>
      <if test="ratio != null">
        #{ratio,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cj.netos.fission.model.BusinessIncomeRatioExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from business_income_ratio
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update business_income_ratio
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.minAmountEdge != null">
        min_amount_edge = #{record.minAmountEdge,jdbcType=BIGINT},
      </if>
      <if test="record.maxAmountEdge != null">
        max_amount_edge = #{record.maxAmountEdge,jdbcType=BIGINT},
      </if>
      <if test="record.ratio != null">
        ratio = #{record.ratio,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update business_income_ratio
    set id = #{record.id,jdbcType=VARCHAR},
      min_amount_edge = #{record.minAmountEdge,jdbcType=BIGINT},
      max_amount_edge = #{record.maxAmountEdge,jdbcType=BIGINT},
      ratio = #{record.ratio,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cj.netos.fission.model.BusinessIncomeRatio">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update business_income_ratio
    <set>
      <if test="minAmountEdge != null">
        min_amount_edge = #{minAmountEdge,jdbcType=BIGINT},
      </if>
      <if test="maxAmountEdge != null">
        max_amount_edge = #{maxAmountEdge,jdbcType=BIGINT},
      </if>
      <if test="ratio != null">
        ratio = #{ratio,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cj.netos.fission.model.BusinessIncomeRatio">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update business_income_ratio
    set min_amount_edge = #{minAmountEdge,jdbcType=BIGINT},
      max_amount_edge = #{maxAmountEdge,jdbcType=BIGINT},
      ratio = #{ratio,jdbcType=DECIMAL}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>